name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite  
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        rust: [stable, nightly]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest  
            target: x86_64-pc-windows-msvc

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}
        targets: ${{ matrix.target }}
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Check formatting
      run: cargo fmt --all -- --check
      
    - name: Clippy lints
      run: cargo clippy --all-targets --all-features -- -D warnings
      
    - name: Build (default features)
      run: cargo build --verbose
      
    - name: Build (all features)
      run: cargo build --all-features --verbose
      
    - name: Run tests (default features)
      run: cargo test --verbose
      
    - name: Run tests (all features)  
      run: cargo test --all-features --verbose
      
    - name: Run benchmarks (compile only)
      run: cargo bench --no-run --all-features

  cross-compile:
    name: Cross Compilation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - i686-unknown-linux-gnu
          
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
        
    - name: Install cross
      run: cargo install cross --git https://github.com/cross-rs/cross
      
    - name: Cross compile
      run: cross build --target ${{ matrix.target }} --verbose
      
    - name: Cross test
      run: cross test --target ${{ matrix.target }} --verbose

  miri:
    name: Miri (unsafe code check)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust nightly with miri
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: miri
        
    - name: Run miri
      run: cargo miri test --all-features
      env:
        MIRIFLAGS: -Zmiri-strict-provenance

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Build documentation
      run: cargo doc --all-features --no-deps --document-private-items
      env:
        RUSTDOCFLAGS: -D warnings
        
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./target/doc

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Install cargo-audit
      run: cargo install cargo-audit
      
    - name: Run security audit
      run: cargo audit